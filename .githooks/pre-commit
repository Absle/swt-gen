#!/bin/sh

separator="\n====================================================================================\n"
exit_code=0

# Fail if formatting issues are found
if ! fmt_check="$(cargo fmt -- --check 2>&1)"; then
    echo "cargo fmt: found code style issues" >&2
    echo "$fmt_check" >&2
    echo -e "$separator" >&2
    exit_code=1
fi

# For each relevant feature, fail if `cargo check` finds any warnings or errors
# Must manually be kept up to date with `[features]` section of `Cargo.toml`
features=("default" "player-safe-gui")
for feature in ${features[@]}; do
    feature_flag=""
    if [ "$feature" != "default" ]; then
        feature_flag="--features $feature"
    fi

    if ! check="$(cargo clippy -q --all-targets --color=always $feature_flag -- --deny warnings 2>&1)"; then
        echo "cargo clippy: found warnings/errors while checking feature '$feature'" >&2
        echo "$check" >&2
        echo -e "$separator" >&2
        exit_code=1
        break
    fi
done

# Fail if test fail to build or run
if ! tests_output="$(cargo test --all-targets --color=always 2>&1)"; then
    echo "cargo test: found test issues" >&2
    echo "$tests_output" >&2
    echo -e "$separator" >&2
    exit_code=1
fi

exit $exit_code
